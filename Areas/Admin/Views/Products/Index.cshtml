@model PagedList.IPagedList<Hoc_ASP.NET_MVC.Models.Entity.Product>

@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<h2></h2>

<form action="@Url.Action("Show","Products")" method="post">
    <span style="">
        @Html.DropDownList("ddlType", ViewBag.productTypes as SelectList, "Chọn loại sản phẩm", new { @class = "col-sm-3" })
    </span>

    @Html.DropDownList("ddlPrice", new List<SelectListItem>
    {
        new SelectListItem{Text = "Dưới 500 nghìn",Value ="1"},
        new SelectListItem{Text = "500 - 1 triệu",Value ="2"},
        new SelectListItem{Text = "1tr - 1.5 triệu",Value ="3"},
        new SelectListItem{Text = "1,5 - 2 triệu",Value ="4"},
        new SelectListItem{Text = "Trên 2 triệu",Value ="5"},
    }, "Tìm kiếm theo giá", new { @class = "col-sm-3" })

    <input class="" id="textSearch" type="text" name="textSearch" placeholder="Search for..."  />
    <button class="">
        <i class=" ">Search</i>
    </button>
</form>
<br />
<br />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model[0].ProductType.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].supplier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].img0)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].img1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].img2)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.supplier)
            </td>
            <td>
                <img src="@Url.Content("~/Images/"+item.ProductType.name+"/" +item.img0)" alt="Image" class="image-products" />
            </td>
            <td>
                <img src="@Url.Content("~/Images/"+item.ProductType.name+"/" +item.img1)" alt="Image" class="image-products" />
            </td>
            <td>
                <img src="@Url.Content("~/Images/"+item.ProductType.name+"/" +item.img2)" alt="Image" class="image-products" />
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                @Html.ActionLink("Details", "Details", new { id = item.id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id })
            </td>
        </tr>
    }
</table>
<div class="" style="display:flex;justify-content:space-around">
    @Html.PagedListPager(
        Model,
        page => Url.Action("Index", "Products", new { page }),
        new PagedListRenderOptions()
        {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" }
        }
    )
</div>
